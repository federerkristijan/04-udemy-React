{"ast":null,"code":"var _jsxFileName = \"/home/kfederer/code/federerkristijan/04-udemy-React/src/components/UI/Input/Input.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useImperativeHandle } from \"react\";\nimport classes from './Input.module.css'; // props and not useContext because props are reusable!\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Input = props => {\n  _s();\n\n  // instead of blocking the button on invalid entry, pressing submit focuses on the invalid field\n  const inputRef = useRef();\n\n  const activate = () => {\n    // focus is a built-in method of JS, of DOM objects\n    inputRef.current.focus();\n  };\n\n  useImperativeHandle(first, () => {\n    return (// focus is externally available name (outside of the )\n      focus\n    );\n  }, [third]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `${classes.control} ${props.isValid === false ? classes.invalid : \"\"}`,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      htmlFor: props.id,\n      children: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      ref: inputRef,\n      type: props.id,\n      id: props.id,\n      value: props.value,\n      onChange: props.onChange,\n      onBlur: props.onBlur\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Input, \"Ag7bjDUBywlCYPNfrolbitV68Mw=\", false, function () {\n  return [useImperativeHandle];\n});\n\n_c = Input;\nexport default Input;\n\nvar _c;\n\n$RefreshReg$(_c, \"Input\");","map":{"version":3,"names":["React","useRef","useImperativeHandle","classes","Input","props","inputRef","activate","current","focus","first","third","control","isValid","invalid","id","label","value","onChange","onBlur"],"sources":["/home/kfederer/code/federerkristijan/04-udemy-React/src/components/UI/Input/Input.js"],"sourcesContent":["import React, { useRef, useImperativeHandle } from \"react\";\nimport classes from './Input.module.css';\n\n// props and not useContext because props are reusable!\nconst Input = props => {\n  // instead of blocking the button on invalid entry, pressing submit focuses on the invalid field\n  const inputRef = useRef();\n\nconst activate = () => {\n    // focus is a built-in method of JS, of DOM objects\n    inputRef.current.focus();\n  };\n\n  useImperativeHandle(\n    first,\n    () => {\n      return (\n        // focus is externally available name (outside of the )\n        focus: activate\n      )\n    },\n    [third],\n  )\n\n  return (\n    <div\n      className={`${classes.control} ${\n        props.isValid === false ? classes.invalid : \"\"\n      }`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      <input\n        ref={inputRef}\n        type={props.id}\n        id={props.id}\n        value={props.value}\n        onChange={props.onChange}\n        onBlur={props.onBlur}\n      />\n    </div>\n  );\n};\n\nexport default Input;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,mBAAxB,QAAmD,OAAnD;AACA,OAAOC,OAAP,MAAoB,oBAApB,C,CAEA;;;;AACA,MAAMC,KAAK,GAAGC,KAAK,IAAI;EAAA;;EACrB;EACA,MAAMC,QAAQ,GAAGL,MAAM,EAAvB;;EAEF,MAAMM,QAAQ,GAAG,MAAM;IACnB;IACAD,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;EACD,CAHH;;EAKEP,mBAAmB,CACjBQ,KADiB,EAEjB,MAAM;IACJ,OACE;MACAD;IAFF;EAID,CAPgB,EAQjB,CAACE,KAAD,CARiB,CAAnB;EAWA,oBACE;IACE,SAAS,EAAG,GAAER,OAAO,CAACS,OAAQ,IAC5BP,KAAK,CAACQ,OAAN,KAAkB,KAAlB,GAA0BV,OAAO,CAACW,OAAlC,GAA4C,EAC7C,EAHH;IAAA,wBAKE;MAAO,OAAO,EAAET,KAAK,CAACU,EAAtB;MAAA,UAA2BV,KAAK,CAACW;IAAjC;MAAA;MAAA;MAAA;IAAA,QALF,eAME;MACE,GAAG,EAAEV,QADP;MAEE,IAAI,EAAED,KAAK,CAACU,EAFd;MAGE,EAAE,EAAEV,KAAK,CAACU,EAHZ;MAIE,KAAK,EAAEV,KAAK,CAACY,KAJf;MAKE,QAAQ,EAAEZ,KAAK,CAACa,QALlB;MAME,MAAM,EAAEb,KAAK,CAACc;IANhB;MAAA;MAAA;MAAA;IAAA,QANF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAiBD,CArCD;;GAAMf,K;UASJF,mB;;;KATIE,K;AAuCN,eAAeA,KAAf"},"metadata":{},"sourceType":"module"}